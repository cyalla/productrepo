name: Create GitHub Issue for Every Commit

on:
  push:
    branches:
      - '**'

jobs:
  create-issue:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Fetch last 2 commits to generate the diff

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate Diff for Last Commit
        id: generate_diff
        run: |
          git diff HEAD^ HEAD > diff.txt

      - name: Check Diff Content
        run: |
          cat diff.txt

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Requests Library
        run: |
          python -m pip install requests

      - name: Call Webservice with Python Script
        id: call_webservice
        run: |
          python - <<EOF
import requests
import json

# Define the public URL of the ngrok tunnel
ngrok_url = "https://fd79-34-106-190-89.ngrok-free.app/webhook"

# Data to send in the POST request (modify according to your endpoint requirements)
payload = {
    "key": "value"
}

# Set the headers
headers = {
    "Content-Type": "application/json"
}

# Make the POST request
try:
    response = requests.post(ngrok_url, data=json.dumps(payload), headers=headers)

    # Check the response status code
    if response.status_code == 200:
        print("Success:", response.text)
        with open("webservice_response.txt", "w") as f:
            f.write(response.text)
    else:
        print(f"Failed with status code: {response.status_code}")
        print("Response content:", response.text)
        with open("webservice_response.txt", "w") as f:
            f.write(f"Failed with status code: {response.status_code}\n")
            f.write(response.text)
except requests.exceptions.RequestException as e:
    print(f"Request failed: {e}")
    with open("webservice_response.txt", "w") as f:
        f.write(f"Request failed: {e}")
EOF

      - name: Append Webservice Output to Diff
        id: append_output
        run: |
          echo "\n\n### Webservice Response\n" >> diff.txt
          cat webservice_response.txt >> diff.txt

      - name: Create GitHub Issue
        if: ${{ success() }}
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Commit diff for ${{ github.sha }}"
          content-filepath: diff.txt
          labels: "commit-diff"
          token: ${{ secrets.GITHUB_TOKEN }}

