import javax.mail.Session
import javax.mail.internet.MimeMessage
import javax.mail.internet.InternetAddress
import javax.mail.Transport
import javax.mail.MessagingException
import javax.mail.Message;
import javax.mail.PasswordAuthentication
 
buildscript {
    repositories {
        flatDir {
            dirs 'libs' // Assuming 'libs' is at the root of your project
        }
    }
    dependencies {
        classpath name: 'javax.mail', version: '1.6.2' 
        classpath name: 'javax.activation', version:  '1.2.0'
    }
}

plugins {
    id 'java' 
    id 'war'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group = 'com.product'


repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies { 
    // If your jars are directly in the libs folder without subdirectories, you can use this simpler form
    implementation fileTree(dir: 'libs', include: '*.jar') 
}


war {
    archiveFileName = 'productapp.war'
}

// Task to send email with HTML test report
task sendEmail {
    doLast {
        String reportPath = "${buildDir}/reports/tests/test/index.html" // Adjust if necessary
        File reportFile = new File(reportPath)
        String htmlContent = reportFile.text

        String host = "internal-mail-router.oracle.com" // Use your internal SMTP server address
        Properties props = System.getProperties()
        props.put("mail.smtp.host", host)
        props.put("mail.smtp.port", "25") // Standard SMTP port, adjust if your server uses a different port
        // Note: No authentication properties are set here

        Session session = Session.getDefaultInstance(props, null) // No Authenticator needed

        try {
            MimeMessage message = new MimeMessage(session)
            message.setFrom(new InternetAddress("chandra.sekhar.yalla@oracle.com")) // Adjust sender email
            message.addRecipient(Message.RecipientType.TO, new InternetAddress("chandra.sekhar.yalla@oracle.com")) // Adjust recipient email
            message.setSubject("Gradle Test Results")
            message.setContent(htmlContent, "text/html; charset=utf-8")

            Transport.send(message)

            println 'Email sent successfully.'
        } catch (MessagingException me) {
            me.printStackTrace()
        }
    }
}
 

test {
    useJUnitPlatform()
    finalizedBy sendEmail
}
